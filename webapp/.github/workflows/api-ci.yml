
# Ciclo de integración continuo.
name: API CI
# Cada que se haga un commit corra este ciclo, es solo para proyectos simples, no monorepos como este.
# on: [push]

# Como este proyecto es un monorepo usaremos lo siguiente ...
on:
  push:
    paths:

      - "./api/**"  # Que haga push solo cuando hay cambios en api o en este mismo archivo.
      - ".github/workflows/api-ci.yml"


defaults:
  run:  # Trabaje en un directorio básico.
    working-directory: ./api

# ... Para un proyecro sencillo se usa solo on: [push] .

# Jobs son las formas y parámetros de automatizar pruebas de github.
# Con esto se le dice a github que no use nuestra maquina de Jest si no su maquina remota.

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      # Clonar repo en la rama que esté.
      - name: Checkout
      - uses: actions/checkout@v2
      # Configure node.
      - name: Setup Nodejs
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ./api/package-lock.json # No olvidar esa linea esencial para monorepos.
      # Instalar dependencias.
      - name: install
      - shell: bash
      - run: npm ci # Comando para instalar dependencias en un entorno de integración continua.
      # Correr las pruebas en automático.
      - name: run unit test
      - shell: bash
      - run: npm run test
# Creé la rama hub para probar el tester de github.
